x$vv.newgrowth[i] <- x$vv.oldgrowth[i] * median(x$ratio[x$site=="U"])
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] - x$vv.newgrowth[i]
}
else if(x$vv.newgrowth[i] >= x$vv.oldgrowth[i]){
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] + x$vv.newgrowth[i]
x$vv.newgrowth[i] <- x$vv.oldgrowth[i] * median(x$ratio[x$site=="U"])
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] - x$vv.newgrowth[i]
}
}
else
if(x$vv.newgrowth[i]==0 & x$vv.oldgrowth[i] !=0){
x$vv.newgrowth[i] <- x$vv.oldgrowth[i] * median(x$ratio[x$site=="S"])
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] - x$vv.newgrowth[i]
}
else if(x$vv.newgrowth[i] >= x$vv.oldgrowth[i]){
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] + x$vv.newgrowth[i]
x$vv.newgrowth[i] <- x$vv.oldgrowth[i] * median(x$ratio[x$site=="S"])
x$vv.oldgrowth[i] <- x$vv.oldgrowth[i] - x$vv.newgrowth[i]
}
}
rm(x,ratio)
###LEDPAL###
# L. palustre was sepereated incorrectly. Some had all leaves categorized as new growth where
#  others had new growth with no corresponding old growth. Both scenarios are incorrect, so
#  in an attempt to correct it, I further seperated each bag labeled "new growth" and "old growth"
#  into leaves and stems. This left me with values for "old growth" leaves and stems and "new growth"
#  leaves and stems. From this, I isolated plots which had newLeaves > oldLeaves, which is a sign of
#  poor seperation. Then I grouped together oldLeaves, oldStems, newStems and categorized that as
#  "old growth". From this, I determined a correct ratio for old to new and applied that ratio to
#  only the plots that had newLeaves > oldLeaves.
lp <- read.csv("LEDPAL-resortweights.csv", header = T, stringsAsFactors = F)
lp[ ,4:length(lp)] <- lp[ ,4:length(lp)] * 4
lp[is.na(lp)] <- -1
# categorize old growth
lp$old <- lp$oldLeaves+lp$oldStems+lp$newStems
a <- as.integer(row.names(lp[lp$newLeaves > lp$oldLeaves,]))
x <- lp[-c(a),]
ratio <- as.data.frame(rep(NA, length(lp$site)))
old <- as.data.frame(rep(NA, length(lp$site)))
change <- as.data.frame(rep(NA, length(lp$site)))
x <- as.data.frame(cbind(lp[1:7], ratio, old, change))
colnames(x)[8] <- "ratio"
colnames(x)[9] <- "old"
colnames(x)[10] <- "change"
for(i in 1:length(x$site)){
x$old[i] <- x$newStems[i] + x$oldStems[i] + x$oldLeaves[i]
x$ratio[i] <- x$newLeaves[i] / x$old[i]
}
x$ratio[is.na(x$ratio)] <- 0
x$ratio[!is.finite(x$ratio)] <- 0
median(x$ratio) # median ratio for all sites is 0.1581147
for(i in 1:length(x$site)){
if(x$site[i]=="U"){
if(x$newLeaves[i] > x$oldLeaves[i]){
x$change[i] <- x$newLeaves[i]
x$newLeaves[i] <- x$old[i] * median(x$ratio[x$site=="U"])
x$old[i] <- x$old[i] + x$change[i] - x$newLeaves[i]
}
}
else if(x$site[i]=="S"){
if(x$newLeaves[i] > x$oldLeaves[i]){
x$change[i] <- x$newLeaves[i]
x$newLeaves[i] <- x$old[i] * median(x$ratio[x$site=="S"])
x$old[i] <- x$old[i] + x$change[i] - x$newLeaves[i]
}
}
}
x$sum <- (x$old + x$newLeaves)
lp$sum <- (lp$newStems + lp$oldLeaves + lp$oldStems + lp$newLeaves)
x$old[x$old < 0] <- 0
x$newLeaves[x$newLeaves < 0] <- 0
lp$infl[lp$infl < 0] <- 0
pluck$lp.newgrowth <- x$newLeaves
pluck$lp.oldgrowth <- x$old
pluck$lp.infl <- pluck$lp.infl + lp$infl
rm(a, change, lp, old, ratio, x, standard.err,i)
#:::::::::::::::::::::::::::::::: Pluck Categories ::::::::::::::::::::::::::::::::
# spp. productivity totals
pluck$ev.anpp <- pluck$ev.blade + pluck$ev.infl
pluck$cb.anpp <- pluck$cb.blade + pluck$cb.infl
pluck$bn.anpp <- pluck$bn.infl + pluck$bn.leaves + pluck$bn.newstems
pluck$sp.anpp <- pluck$sp.leaves + pluck$sp.newstem
pluck$lp.anpp <- pluck$lp.newgrowth + pluck$lp.infl
pluck$vv.anpp <- pluck$vv.newgrowth + pluck$vv.infl
pluck$ct.anpp <- pluck$ct.newgrowth
pluck$ap.anpp <- pluck$ap.newgrowth
pluck$rc.anpp <- pluck$rc.above + pluck$rc.infl
pluck$pf.anpp <- pluck$pf.above
# ft productivity totals
pluck$decid.anpp <- pluck$bn.anpp + pluck$sp.anpp
pluck$evergr.anpp <- pluck$lp.anpp + pluck$vv.anpp + pluck$ct.anpp + pluck$ap.anpp
pluck$forb.anpp <- pluck$rc.anpp + pluck$pf.anpp
pluck$sedge.anpp <- pluck$ev.anpp + pluck$cb.anpp
pluck$anpp <- pluck$decid.anpp + pluck$evergr.anpp + pluck$sedge.anpp + pluck$forb.anpp
# spp. proportion of total productivity
pluck$p.ev.anpp <- pluck$ev.anpp/pluck$anpp
pluck$p.cb.anpp <- pluck$cb.anpp/pluck$anpp
pluck$p.bn.anpp <- pluck$bn.anpp/pluck$anpp
pluck$p.sp.anpp <- pluck$sp.anpp/pluck$anpp
pluck$p.lp.anpp <- pluck$lp.anpp/pluck$anpp
pluck$p.vv.anpp <- pluck$vv.anpp/pluck$anpp
pluck$p.ct.anpp <- pluck$ct.anpp/pluck$anpp
pluck$p.ap.anpp <- pluck$ap.anpp/pluck$anpp
pluck$p.rc.anpp <- pluck$rc.anpp/pluck$anpp
pluck$p.pf.anpp <- pluck$pf.anpp/pluck$anpp
# ft proportion of total productivity
pluck$p.decid.anpp <- pluck$decid.anpp/pluck$anpp
pluck$p.evergr.anpp <- pluck$evergr.anpp/pluck$anpp
pluck$p.sedge.anpp <- pluck$sedge.anpp/pluck$anpp
pluck$p.forb.anpp <- pluck$forb.anpp/pluck$anpp
# spp. biomass totals
pluck$ev.wt <- pluck$ev.blade + pluck$ev.infl #+ pluck$ev.dead.sheath
pluck$cb.wt <- pluck$cb.blade + pluck$cb.infl #+ pluck$cb.sheath
pluck$bn.wt <- pluck$bn.infl + pluck$bn.leaves + pluck$bn.newstems + pluck$bn.oldstem
pluck$sp.wt <- pluck$sp.leaves + pluck$sp.newstem + pluck$sp.oldstem
pluck$lp.wt <- pluck$lp.oldgrowth + pluck$lp.newgrowth + pluck$lp.infl
pluck$vv.wt <- pluck$vv.infl + pluck$vv.newgrowth + pluck$vv.oldgrowth
pluck$ct.wt <- pluck$ct.newgrowth + pluck$ct.oldgrowth
pluck$ap.wt <- pluck$ap.newgrowth + pluck$ap.oldgrowth
pluck$rc.wt <- pluck$rc.above + pluck$rc.infl + pluck$rc.litter
pluck$pf.wt <- pluck$pf.above + pluck$pf.litter
# ft. biomass totals
pluck$decid.wt <- pluck$bn.wt + pluck$sp.wt + pluck$rc.wt
pluck$evergr.wt <- pluck$lp.wt + pluck$vv.wt + pluck$ct.wt + pluck$ap.wt
pluck$forb.wt <- pluck$pf.wt
pluck$sedge.wt <- pluck$ev.wt + pluck$cb.wt
# total total biomass
pluck$biomass <- pluck$decid.wt +  pluck$evergr.wt + pluck$sedge.wt + pluck$forb.wt
# spp. proportion of total biomass
pluck$p.bn.wt <- pluck$bn.wt/pluck$biomass
pluck$p.sp.wt <- pluck$sp.wt/pluck$biomass
pluck$p.lp.wt <- pluck$lp.wt/pluck$biomass
pluck$p.vv.wt <- pluck$vv.wt/pluck$biomass
pluck$p.ct.wt <- pluck$ct.wt/pluck$biomass
pluck$p.ap.wt <- pluck$ap.wt/pluck$biomass
pluck$p.rc.wt <- pluck$rc.wt/pluck$biomass
pluck$p.pf.wt <- pluck$bn.wt/pluck$biomass
# ft proporation of biomass
pluck$p.decid.wt <- pluck$decid.wt/pluck$biomass
pluck$p.evergr.wt <- pluck$evergr.wt/pluck$biomass
pluck$p.sedge.wt <- pluck$sedge.wt/pluck$biomass
pluck$p.forb.wt <- pluck$forb.wt/pluck$biomass
# ratio productivity/biomass
pluck$ratio <- pluck$anpp/pluck$biomass
# spp. ratio
pluck$bn.ratio <- pluck$bn.anpp/pluck$bn.wt
pluck$sp.ratio <- pluck$sp.anpp/pluck$sp.wt
pluck$ev.ratio <- pluck$ev.anpp/pluck$ev.wt
pluck$cb.ratio <- pluck$cb.anpp/pluck$cb.wt
pluck$lp.ratio <- pluck$lp.anpp/pluck$lp.wt
pluck$vv.ratio <- pluck$vv.anpp/pluck$vv.wt
pluck$ct.ratio <- pluck$ct.anpp/pluck$ct.wt
pluck$ap.ratio <- pluck$ap.anpp/pluck$ap.wt
pluck$rc.ratio <- pluck$rc.anpp/pluck$rc.wt
pluck$pf.ratio <- pluck$pf.anpp/pluck$pf.wt
# ft ratio
pluck$decid.ratio <- pluck$decid.anpp/pluck$decid.wt
pluck$evergr.ratio <- pluck$evergr.anpp/pluck$evergr.wt
pluck$sedge.ratio <- pluck$sedge.anpp/pluck$sedge.wt
pluck$forb.ratio <- pluck$forb.anpp/pluck$forb.wt
# other
pluck$leaves <- pluck$bn.leaves + pluck$sp.leaves + pluck$rc.above + pluck$lp.newgrowth +
pluck$vv.newgrowth + pluck$pf.above + pluck$ev.blade + pluck$cb.blade
pluck$litter <- pluck$cb.litter + pluck$ev.litter + pluck$pf.litter + pluck$rc.litter +
pluck$decid.litter + pluck$evergr.litter
pluck$tussock <- pluck$ev.blade + pluck$ev.dead.sheath + pluck$ev.decomp.sheath + pluck$ev.litter +
pluck$ev.rhizome + pluck$ev.roots + pluck$ev.tussockom
# Change CX to C
c <- subset(pluck, treatment=="C"|treatment=="CX")
t.test(anpp~treatment,var.equal=TRUE, data=c); rm(c)
#add standing water as a factor
#pluck$water <- 0
#SB4CX, SB3NP, SB3P, SB3C, SB3N, SB2N, SB1NP have standing water?
dim(pluck)
pluck <- pluck[,c(1:5, 56:ncol(pluck))]
#pluck$treatment[pluck$treatment=="CX"] <- "C"
# transformations?
setwd("~/Desktop/thesis-data/R-code/")
file.edit('burn-spectra.R','burn-stats.R','burn-stats-graphs-v2.R')
setwd("~/Desktop/thesis-data/")
# join together data frames
df <- Merge(df, thaw, height, indicies, lai, pf, id=~site*block*treatment)
df <- df[order(df$treatment),]
df <- df[order(df$site),]
df$treatment <- as.factor(df$treatment)
df$site <- as.factor(df$site)
pluck$block <- as.factor(pluck$block)
s.err <- function(x){
sd(x)/sqrt(length(x))
}
R <- function(myData){
# treatment/control (R ratio from LeBauer-2008)
p <- myData
## generate list of differences (treatment / control)
## write loop that creates dataframe of difference values
variable <- c(names(myData[-c(1:5)]))
# s.dists <- as.matrix(dist(cbind(p$x, p$y)))
# colnames(s.dists) <- paste0(p$site,p$block,p$treatment)
# rownames(s.dists) <- colnames(s.dists)
# s.dists <- s.dists[grep("[SU][0-4][NP]+",rownames(s.dists)),grep("[SU][0-4]C",colnames(s.dists))]
# dist.factor <- (1.1-(s.dists/(max(s.dists))))
for(i in variable){
ii <- (which(i == variable))
d <- outer(p[,i],p[,i],'/')
colnames(d) <- paste0(p$site, p$block, p$treatment)
rownames(d) <- colnames(d)
d <- d[grep("[SU][0-4][NP]+",rownames(d)),grep("[SU][0-4]C",colnames(d))]
# d <- d * dist.factor
d <- as.data.frame(as.table(d))
if(ii == 1){
final <- d[substring(d$Var1, 1, 1) == substring(d$Var2, 1, 1),][1:3]
} else {
final[,ii+2] <- d[substring(d$Var1, 1, 1) == substring(d$Var2, 1, 1),][3]
}
}
final <- separate(final, Var1, c("site","block","treatment"), c(1,2))
names(final)[names(final) == 'Var2'] <- 'control'
final$control <- substring(final$control, 2, 4)
colnames(final)[-c(1:4)] <- variable
is.na(final) <- do.call(cbind,lapply(final, is.infinite))
is.na(final) <- do.call(cbind,lapply(final, is.nan))
final[is.na(final)] <- 0
for(i in 1:length(variable)){
if(i == 1){
a <- aggregate(final[,i+4] ~ control + treatment + site, final, mean)
} else{
a[,i+3] <- aggregate(final[,i+4] ~ control + treatment + site, final, mean)[4]
}
}
final <- a
colnames(final)[-c(1:3)] <- variable
final <- final[,-1]
return(final)
}
pluckR <- R(pluck)
dfR <- R(df)
pluck_site_diff <- pluck[pluck$treatment=="C"|pluck$treatment=="CX",]
df_site_diff <- df[df$treatment=="C"|df$treatment=="CX",]
rm(height, indicies, lai, thaw)
cat("\014")
rr <- pluck[,c(1,3,6:15)]
rr$treatment[rr$treatment=="CX"] <- "C"
rr <- melt(rr)
variable <- levels(rr$variable)
a <- data.frame()
for(i in variable){
for(ii in 1:5){
x <- log(rr[rr$treatment=="NP" & rr$site=="S" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C" & rr$site=="S" & rr$variable==i,][1:10,4])
y <- log(rr[rr$treatment=="NP" & rr$site=="U" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C" & rr$site=="U" & rr$variable==i,][1:10,4])
is.na(x) <- sapply(x, is.infinite)
is.na(y) <- sapply(y, is.infinite)
a[ii,i] <- mean(x, na.rm = T)
a[ii+10,i] <- mean(y, na.rm = T)
}
}
a <- colMeans(a, na.rm = T)
b <- data.frame()
for(i in variable){
for(ii in 1:10){
x <- log(rr[rr$treatment=="C" & rr$site=="S" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C"&rr$site=="U"&rr$variable==i,][1:10,4])
is.na(x) <- sapply(x, is.infinite)
b[ii,i] <- mean(x, na.rm = T)
}
}
b <- colMeans(b,na.rm = T)
a <- melt(a)
b <- melt(b)
data <- cbind(a,b)
data <- rownames_to_column(data)
colnames(data) <- c("species","burn","fertilizer")
ggplot(data,aes(x=burn,y=fertilizer)) +
geom_text(aes(label=species)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
theme_bw()
pluck[,c(1,3,6:15)]
ggplot(data,aes(x=burn,y=fertilizer)) +
geom_point() +
geom_text(aes(label=species)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
theme_bw()
View(pf)
View(pluck)
pluck[,c(1,3,16:20)]
rr <- pluck[,c(1,3,16:20)]
rr$treatment[rr$treatment=="CX"] <- "C"
rr <- melt(rr)
variable <- levels(rr$variable)
ii = 1
i = "ev.anpp"
a <- data.frame()
for(i in variable){
for(ii in 1:5){
x <- log(rr[rr$treatment=="NP" & rr$site=="S" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C" & rr$site=="S" & rr$variable==i,][1:10,4])
y <- log(rr[rr$treatment=="NP" & rr$site=="U" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C" & rr$site=="U" & rr$variable==i,][1:10,4])
is.na(x) <- sapply(x, is.infinite)
is.na(y) <- sapply(y, is.infinite)
a[ii,i] <- mean(x, na.rm = T)
a[ii+10,i] <- mean(y, na.rm = T)
}
}
a <- colMeans(a, na.rm = T)
b <- data.frame()
for(i in variable){
for(ii in 1:10){
x <- log(rr[rr$treatment=="C" & rr$site=="S" & rr$variable==i,][ii,4]/
rr[rr$treatment=="C"&rr$site=="U"&rr$variable==i,][1:10,4])
is.na(x) <- sapply(x, is.infinite)
b[ii,i] <- mean(x, na.rm = T)
}
}
b <- colMeans(b,na.rm = T)
a <- melt(a)
b <- melt(b)
data <- cbind(a,b)
data <- rownames_to_column(data)
colnames(data) <- c("species","burn","fertilizer")
ggplot(data,aes(x=burn,y=fertilizer)) +
geom_point() +
geom_text(aes(label=species)) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
theme_bw()
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
a <- read.csv("S-0-C.xlsx")
a <- read.csv("S-0-C.xlsx", header = T, stringsAsFactors = F)
a <- read.xlsx("S-0-C.xlsx", sheet = 1)
View(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T)
View(a)
colnames(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T)
colnames(a)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T)
colnames(a)
View(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T)
colnames(a)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T)
colnames(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T, rowNames = T, skipEmptyRows = T)
colnames(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 2, colNames = T, rowNames = T, skipEmptyRows = T)
colnames(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 0, colNames = T, rowNames = T, skipEmptyRows = T)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T, rowNames = T, skipEmptyRows = T)
colnames(a)
a <- read.xlsx("S-0-N.xlsx", sheet = 1, colNames = T, rowNames = T, skipEmptyRows = T)
colnames(a)
a <- read.xlsx("S-0-N.xlsx", sheet = 1, colNames = T, rowNames = F, skipEmptyRows = T)
colnames(a)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T, rowNames = F, skipEmptyRows = T)
colnames(a)
b <- read.csv("S-0-C.csv")
colnames(B)
colnames(b)
View(b)
a <- read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T, rowNames = F, skipEmptyRows = T)
colnames(a)
View(a)
a <- data.frame(read.xlsx("S-0-C.xlsx", sheet = 1, colNames = T, rowNames = F, skipEmptyRows = T))
colnames(a)
library(tidyverse)
dat <- read_csv("S-0-C.csv")
dat
View(dat)
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
dat <- read_csv("S-0-C.csv")
dat
list.files(pattern="*.xlsx")
myfiles = lapply(files, readxl)
files <- list.files(pattern="*.xlsx")
myfiles = lapply(files, read.xlsx)
myfiles
dat <- read_csv("S-0-C.csv")
dat
library("rio")
require("rio")
install.packages("rio")
xls <- dir(pattern = "xlsx")
xls
created <- mapply(convert, xls, gsub("xlsx", "csv", xls))
created
lapply(xls, function(f) {
df = read.xlsx(f, sheet=1)
write.csv(df, gsub("xlsx", "csv", f), row.names=FALSE)
})
lapply(xls, function(f) {
df = read.xl(f, sheet=1)
write.csv(df, gsub("xlsx", "csv", f), row.names=FALSE)
})
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
files <- list.files(pattern="*.csv")
files
lapply(files, read_csv)
library(tidyverse)
lapply(files, read_csv)
warnings()
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
dat <- read_csv("S-0-C.csv")
dat
View(dat)
files <- list.files(pattern="*.csv")
lapply(files, read_csv)
cat("\014")
list <- lapply(files, read_csv)
list <- sapply(files, read_csv)
list
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
files <- list.files(pattern="*.csv")
list <- sapply(files, read_csv)
list
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
files <- list.files(pattern="*.csv")
list <- sapply(files, read_csv)
list
files <- list.files(pattern="*.csv")
list <- sapply(files, read_csv)
list
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
files <- list.files(pattern="*.csv")
files
list <- lapply(files, read_csv)
list
list <- sapply(files, read_csv)
list
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
tbl <-
list.files(pattern = "*.csv") %>%
map_df(~read_csv(.))
tbl
tbl <- list.files(pattern = "*.csv") %>% map_df(~read_csv(.))
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
list.files(pattern = "*.csv")
read_csv(.)
list.files(pattern = "*.csv") %>% map_df(~read_csv(.))
tbl <- list.files(pattern = "*.csv") %>% map_df(~read_csv(.))
tbl <- list.files(pattern = "*.csv") %>% map( ~ read_csv(.))
tbl
dat <- list.files(pattern = "*.csv") %>% map( ~ read_csv(.))
rm(list=ls())
if(!is.null(dev.list())) dev.off()
cat("\014")
setwd("~/Desktop/thesis-data/point-frame/point-frame-2019/")
library(tidyverse)
dat <- list.files(pattern = "*.csv") %>% map( ~ read_csv(.))
dat[1]
dat[2]
dat <- list.files(pattern = "*.csv") %>% map_if( ~ read_csv(.))
dat
dat <- list.files(pattern = "*.csv") %>% map_dfc( ~ read_csv(.))
dat
View(dat)
dat <- list.files(pattern = "*.csv") %>% map_dfr( ~ read_csv(.))
dat
View(dat)
list <- list.files(pattern = "*.csv")
list
list[1:10]
read_csv("S-0-C.csv")
S0C <- read_csv("S-0-C.csv")
View(S0C)
S0C <- read_csv("S-0-C.csv", col_names = T)
spec(...)
spec()
spec(S0C)
S0C <- read_csv("S-0-C.csv", col_names = T)
S0C
View(S0C)
library(tidyverse)
require(tidyverse)
